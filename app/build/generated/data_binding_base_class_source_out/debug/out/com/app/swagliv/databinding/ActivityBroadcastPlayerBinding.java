// Generated by view binder compiler. Do not edit!
package com.app.swagliv.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.EditText;
import android.widget.FrameLayout;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.LinearLayoutCompat;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.app.swagliv.R;
import com.bambuser.broadcaster.SurfaceViewWithAutoAR;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityBroadcastPlayerBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final SurfaceViewWithAutoAR VideoSurfaceView;

  @NonNull
  public final LinearLayoutCompat bottomContainer;

  @NonNull
  public final LinearLayout cloneContainer;

  @NonNull
  public final ImageView coin;

  @NonNull
  public final RecyclerView commentRecycleView;

  @NonNull
  public final EditText etComment;

  @NonNull
  public final TextView gif;

  @NonNull
  public final ImageView heart;

  @NonNull
  public final ImageView imgAddConnections;

  @NonNull
  public final ImageView imgBack;

  @NonNull
  public final ImageView imgHost;

  @NonNull
  public final FrameLayout myfrag;

  @NonNull
  public final LinearLayoutCompat sensor;

  @NonNull
  public final TextView signals;

  @NonNull
  public final LinearLayout streamingContainer;

  private ActivityBroadcastPlayerBinding(@NonNull RelativeLayout rootView,
      @NonNull SurfaceViewWithAutoAR VideoSurfaceView, @NonNull LinearLayoutCompat bottomContainer,
      @NonNull LinearLayout cloneContainer, @NonNull ImageView coin,
      @NonNull RecyclerView commentRecycleView, @NonNull EditText etComment, @NonNull TextView gif,
      @NonNull ImageView heart, @NonNull ImageView imgAddConnections, @NonNull ImageView imgBack,
      @NonNull ImageView imgHost, @NonNull FrameLayout myfrag, @NonNull LinearLayoutCompat sensor,
      @NonNull TextView signals, @NonNull LinearLayout streamingContainer) {
    this.rootView = rootView;
    this.VideoSurfaceView = VideoSurfaceView;
    this.bottomContainer = bottomContainer;
    this.cloneContainer = cloneContainer;
    this.coin = coin;
    this.commentRecycleView = commentRecycleView;
    this.etComment = etComment;
    this.gif = gif;
    this.heart = heart;
    this.imgAddConnections = imgAddConnections;
    this.imgBack = imgBack;
    this.imgHost = imgHost;
    this.myfrag = myfrag;
    this.sensor = sensor;
    this.signals = signals;
    this.streamingContainer = streamingContainer;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityBroadcastPlayerBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityBroadcastPlayerBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_broadcast_player, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityBroadcastPlayerBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.VideoSurfaceView;
      SurfaceViewWithAutoAR VideoSurfaceView = ViewBindings.findChildViewById(rootView, id);
      if (VideoSurfaceView == null) {
        break missingId;
      }

      id = R.id.bottomContainer;
      LinearLayoutCompat bottomContainer = ViewBindings.findChildViewById(rootView, id);
      if (bottomContainer == null) {
        break missingId;
      }

      id = R.id.cloneContainer;
      LinearLayout cloneContainer = ViewBindings.findChildViewById(rootView, id);
      if (cloneContainer == null) {
        break missingId;
      }

      id = R.id.coin;
      ImageView coin = ViewBindings.findChildViewById(rootView, id);
      if (coin == null) {
        break missingId;
      }

      id = R.id.commentRecycleView;
      RecyclerView commentRecycleView = ViewBindings.findChildViewById(rootView, id);
      if (commentRecycleView == null) {
        break missingId;
      }

      id = R.id.et_comment;
      EditText etComment = ViewBindings.findChildViewById(rootView, id);
      if (etComment == null) {
        break missingId;
      }

      id = R.id.gif;
      TextView gif = ViewBindings.findChildViewById(rootView, id);
      if (gif == null) {
        break missingId;
      }

      id = R.id.heart;
      ImageView heart = ViewBindings.findChildViewById(rootView, id);
      if (heart == null) {
        break missingId;
      }

      id = R.id.img_addConnections;
      ImageView imgAddConnections = ViewBindings.findChildViewById(rootView, id);
      if (imgAddConnections == null) {
        break missingId;
      }

      id = R.id.img_back;
      ImageView imgBack = ViewBindings.findChildViewById(rootView, id);
      if (imgBack == null) {
        break missingId;
      }

      id = R.id.img_host;
      ImageView imgHost = ViewBindings.findChildViewById(rootView, id);
      if (imgHost == null) {
        break missingId;
      }

      id = R.id.myfrag;
      FrameLayout myfrag = ViewBindings.findChildViewById(rootView, id);
      if (myfrag == null) {
        break missingId;
      }

      id = R.id.sensor;
      LinearLayoutCompat sensor = ViewBindings.findChildViewById(rootView, id);
      if (sensor == null) {
        break missingId;
      }

      id = R.id.signals;
      TextView signals = ViewBindings.findChildViewById(rootView, id);
      if (signals == null) {
        break missingId;
      }

      id = R.id.streamingContainer;
      LinearLayout streamingContainer = ViewBindings.findChildViewById(rootView, id);
      if (streamingContainer == null) {
        break missingId;
      }

      return new ActivityBroadcastPlayerBinding((RelativeLayout) rootView, VideoSurfaceView,
          bottomContainer, cloneContainer, coin, commentRecycleView, etComment, gif, heart,
          imgAddConnections, imgBack, imgHost, myfrag, sensor, signals, streamingContainer);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
