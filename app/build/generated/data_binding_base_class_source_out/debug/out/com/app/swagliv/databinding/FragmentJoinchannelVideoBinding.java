// Generated by view binder compiler. Do not edit!
package com.app.swagliv.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.EditText;
import android.widget.FrameLayout;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatButton;
import androidx.appcompat.widget.AppCompatEditText;
import androidx.appcompat.widget.LinearLayoutCompat;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.app.swagliv.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentJoinchannelVideoBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final LinearLayoutCompat bottomContainer;

  @NonNull
  public final AppCompatButton btnJoin;

  @NonNull
  public final LinearLayout cloneContainer;

  @NonNull
  public final ImageView coin;

  @NonNull
  public final RecyclerView commentRecycleView;

  @NonNull
  public final AppCompatEditText etChannel;

  @NonNull
  public final EditText etComment;

  @NonNull
  public final FrameLayout flLocalVideo;

  @NonNull
  public final FrameLayout flRemote2;

  @NonNull
  public final FrameLayout flRemote3;

  @NonNull
  public final FrameLayout flRemote4;

  @NonNull
  public final FrameLayout flRemote5;

  @NonNull
  public final FrameLayout flRemoteVideo;

  @NonNull
  public final TextView gif;

  @NonNull
  public final ImageView heart;

  @NonNull
  public final ImageView imgAddConnections;

  @NonNull
  public final ImageView imgBack;

  @NonNull
  public final ImageView imgHost;

  @NonNull
  public final LinearLayout llJoin;

  @NonNull
  public final LinearLayoutCompat sensor;

  @NonNull
  public final TextView signals;

  @NonNull
  public final LinearLayout videoContainer;

  @NonNull
  public final LinearLayout videoContainerRow1;

  @NonNull
  public final LinearLayout videoContainerRow2;

  @NonNull
  public final LinearLayout videoContainerRow3;

  private FragmentJoinchannelVideoBinding(@NonNull RelativeLayout rootView,
      @NonNull LinearLayoutCompat bottomContainer, @NonNull AppCompatButton btnJoin,
      @NonNull LinearLayout cloneContainer, @NonNull ImageView coin,
      @NonNull RecyclerView commentRecycleView, @NonNull AppCompatEditText etChannel,
      @NonNull EditText etComment, @NonNull FrameLayout flLocalVideo,
      @NonNull FrameLayout flRemote2, @NonNull FrameLayout flRemote3,
      @NonNull FrameLayout flRemote4, @NonNull FrameLayout flRemote5,
      @NonNull FrameLayout flRemoteVideo, @NonNull TextView gif, @NonNull ImageView heart,
      @NonNull ImageView imgAddConnections, @NonNull ImageView imgBack, @NonNull ImageView imgHost,
      @NonNull LinearLayout llJoin, @NonNull LinearLayoutCompat sensor, @NonNull TextView signals,
      @NonNull LinearLayout videoContainer, @NonNull LinearLayout videoContainerRow1,
      @NonNull LinearLayout videoContainerRow2, @NonNull LinearLayout videoContainerRow3) {
    this.rootView = rootView;
    this.bottomContainer = bottomContainer;
    this.btnJoin = btnJoin;
    this.cloneContainer = cloneContainer;
    this.coin = coin;
    this.commentRecycleView = commentRecycleView;
    this.etChannel = etChannel;
    this.etComment = etComment;
    this.flLocalVideo = flLocalVideo;
    this.flRemote2 = flRemote2;
    this.flRemote3 = flRemote3;
    this.flRemote4 = flRemote4;
    this.flRemote5 = flRemote5;
    this.flRemoteVideo = flRemoteVideo;
    this.gif = gif;
    this.heart = heart;
    this.imgAddConnections = imgAddConnections;
    this.imgBack = imgBack;
    this.imgHost = imgHost;
    this.llJoin = llJoin;
    this.sensor = sensor;
    this.signals = signals;
    this.videoContainer = videoContainer;
    this.videoContainerRow1 = videoContainerRow1;
    this.videoContainerRow2 = videoContainerRow2;
    this.videoContainerRow3 = videoContainerRow3;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentJoinchannelVideoBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentJoinchannelVideoBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_joinchannel_video, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentJoinchannelVideoBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.bottomContainer;
      LinearLayoutCompat bottomContainer = ViewBindings.findChildViewById(rootView, id);
      if (bottomContainer == null) {
        break missingId;
      }

      id = R.id.btn_join;
      AppCompatButton btnJoin = ViewBindings.findChildViewById(rootView, id);
      if (btnJoin == null) {
        break missingId;
      }

      id = R.id.cloneContainer;
      LinearLayout cloneContainer = ViewBindings.findChildViewById(rootView, id);
      if (cloneContainer == null) {
        break missingId;
      }

      id = R.id.coin;
      ImageView coin = ViewBindings.findChildViewById(rootView, id);
      if (coin == null) {
        break missingId;
      }

      id = R.id.commentRecycleView;
      RecyclerView commentRecycleView = ViewBindings.findChildViewById(rootView, id);
      if (commentRecycleView == null) {
        break missingId;
      }

      id = R.id.et_channel;
      AppCompatEditText etChannel = ViewBindings.findChildViewById(rootView, id);
      if (etChannel == null) {
        break missingId;
      }

      id = R.id.et_comment;
      EditText etComment = ViewBindings.findChildViewById(rootView, id);
      if (etComment == null) {
        break missingId;
      }

      id = R.id.fl_local_video;
      FrameLayout flLocalVideo = ViewBindings.findChildViewById(rootView, id);
      if (flLocalVideo == null) {
        break missingId;
      }

      id = R.id.fl_remote2;
      FrameLayout flRemote2 = ViewBindings.findChildViewById(rootView, id);
      if (flRemote2 == null) {
        break missingId;
      }

      id = R.id.fl_remote3;
      FrameLayout flRemote3 = ViewBindings.findChildViewById(rootView, id);
      if (flRemote3 == null) {
        break missingId;
      }

      id = R.id.fl_remote4;
      FrameLayout flRemote4 = ViewBindings.findChildViewById(rootView, id);
      if (flRemote4 == null) {
        break missingId;
      }

      id = R.id.fl_remote5;
      FrameLayout flRemote5 = ViewBindings.findChildViewById(rootView, id);
      if (flRemote5 == null) {
        break missingId;
      }

      id = R.id.fl_remote_video;
      FrameLayout flRemoteVideo = ViewBindings.findChildViewById(rootView, id);
      if (flRemoteVideo == null) {
        break missingId;
      }

      id = R.id.gif;
      TextView gif = ViewBindings.findChildViewById(rootView, id);
      if (gif == null) {
        break missingId;
      }

      id = R.id.heart;
      ImageView heart = ViewBindings.findChildViewById(rootView, id);
      if (heart == null) {
        break missingId;
      }

      id = R.id.img_addConnections;
      ImageView imgAddConnections = ViewBindings.findChildViewById(rootView, id);
      if (imgAddConnections == null) {
        break missingId;
      }

      id = R.id.img_back;
      ImageView imgBack = ViewBindings.findChildViewById(rootView, id);
      if (imgBack == null) {
        break missingId;
      }

      id = R.id.img_host;
      ImageView imgHost = ViewBindings.findChildViewById(rootView, id);
      if (imgHost == null) {
        break missingId;
      }

      id = R.id.ll_join;
      LinearLayout llJoin = ViewBindings.findChildViewById(rootView, id);
      if (llJoin == null) {
        break missingId;
      }

      id = R.id.sensor;
      LinearLayoutCompat sensor = ViewBindings.findChildViewById(rootView, id);
      if (sensor == null) {
        break missingId;
      }

      id = R.id.signals;
      TextView signals = ViewBindings.findChildViewById(rootView, id);
      if (signals == null) {
        break missingId;
      }

      id = R.id.video_container;
      LinearLayout videoContainer = ViewBindings.findChildViewById(rootView, id);
      if (videoContainer == null) {
        break missingId;
      }

      id = R.id.video_container_row1;
      LinearLayout videoContainerRow1 = ViewBindings.findChildViewById(rootView, id);
      if (videoContainerRow1 == null) {
        break missingId;
      }

      id = R.id.video_container_row2;
      LinearLayout videoContainerRow2 = ViewBindings.findChildViewById(rootView, id);
      if (videoContainerRow2 == null) {
        break missingId;
      }

      id = R.id.video_container_row3;
      LinearLayout videoContainerRow3 = ViewBindings.findChildViewById(rootView, id);
      if (videoContainerRow3 == null) {
        break missingId;
      }

      return new FragmentJoinchannelVideoBinding((RelativeLayout) rootView, bottomContainer,
          btnJoin, cloneContainer, coin, commentRecycleView, etChannel, etComment, flLocalVideo,
          flRemote2, flRemote3, flRemote4, flRemote5, flRemoteVideo, gif, heart, imgAddConnections,
          imgBack, imgHost, llJoin, sensor, signals, videoContainer, videoContainerRow1,
          videoContainerRow2, videoContainerRow3);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
