// Generated by view binder compiler. Do not edit!
package com.app.swagliv.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Chronometer;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.coordinatorlayout.widget.CoordinatorLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.app.swagliv.R;
import com.google.android.material.floatingactionbutton.FloatingActionButton;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityVoiceBinding implements ViewBinding {
  @NonNull
  private final CoordinatorLayout rootView;

  @NonNull
  public final FloatingActionButton callActionFab;

  @NonNull
  public final Chronometer chronometer;

  @NonNull
  public final CoordinatorLayout coordinatorLayout;

  @NonNull
  public final FloatingActionButton hangupActionFab;

  @NonNull
  public final FloatingActionButton holdActionFab;

  @NonNull
  public final FloatingActionButton muteActionFab;

  private ActivityVoiceBinding(@NonNull CoordinatorLayout rootView,
      @NonNull FloatingActionButton callActionFab, @NonNull Chronometer chronometer,
      @NonNull CoordinatorLayout coordinatorLayout, @NonNull FloatingActionButton hangupActionFab,
      @NonNull FloatingActionButton holdActionFab, @NonNull FloatingActionButton muteActionFab) {
    this.rootView = rootView;
    this.callActionFab = callActionFab;
    this.chronometer = chronometer;
    this.coordinatorLayout = coordinatorLayout;
    this.hangupActionFab = hangupActionFab;
    this.holdActionFab = holdActionFab;
    this.muteActionFab = muteActionFab;
  }

  @Override
  @NonNull
  public CoordinatorLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityVoiceBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityVoiceBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_voice, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityVoiceBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.call_action_fab;
      FloatingActionButton callActionFab = ViewBindings.findChildViewById(rootView, id);
      if (callActionFab == null) {
        break missingId;
      }

      id = R.id.chronometer;
      Chronometer chronometer = ViewBindings.findChildViewById(rootView, id);
      if (chronometer == null) {
        break missingId;
      }

      CoordinatorLayout coordinatorLayout = (CoordinatorLayout) rootView;

      id = R.id.hangup_action_fab;
      FloatingActionButton hangupActionFab = ViewBindings.findChildViewById(rootView, id);
      if (hangupActionFab == null) {
        break missingId;
      }

      id = R.id.hold_action_fab;
      FloatingActionButton holdActionFab = ViewBindings.findChildViewById(rootView, id);
      if (holdActionFab == null) {
        break missingId;
      }

      id = R.id.mute_action_fab;
      FloatingActionButton muteActionFab = ViewBindings.findChildViewById(rootView, id);
      if (muteActionFab == null) {
        break missingId;
      }

      return new ActivityVoiceBinding((CoordinatorLayout) rootView, callActionFab, chronometer,
          coordinatorLayout, hangupActionFab, holdActionFab, muteActionFab);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
