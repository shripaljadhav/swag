// Generated by data binding compiler. Do not edit!
package com.app.swagliv.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.databinding.Bindable;
import androidx.databinding.DataBindingUtil;
import androidx.databinding.ViewDataBinding;
import com.app.swagliv.R;
import com.app.swagliv.model.profile.pojo.Subscription;
import java.lang.Deprecated;
import java.lang.Object;

public abstract class ItemPriceBinding extends ViewDataBinding {
  @NonNull
  public final TextView month;

  @NonNull
  public final TextView monthNo;

  @NonNull
  public final LinearLayout parentLayout;

  @NonNull
  public final TextView price;

  @NonNull
  public final TextView subscriptionName;

  @Bindable
  protected Subscription mPrice;

  protected ItemPriceBinding(Object _bindingComponent, View _root, int _localFieldCount,
      TextView month, TextView monthNo, LinearLayout parentLayout, TextView price,
      TextView subscriptionName) {
    super(_bindingComponent, _root, _localFieldCount);
    this.month = month;
    this.monthNo = monthNo;
    this.parentLayout = parentLayout;
    this.price = price;
    this.subscriptionName = subscriptionName;
  }

  public abstract void setPrice(@Nullable Subscription price);

  @Nullable
  public Subscription getPrice() {
    return mPrice;
  }

  @NonNull
  public static ItemPriceBinding inflate(@NonNull LayoutInflater inflater, @Nullable ViewGroup root,
      boolean attachToRoot) {
    return inflate(inflater, root, attachToRoot, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.item_price, root, attachToRoot, component)
   */
  @NonNull
  @Deprecated
  public static ItemPriceBinding inflate(@NonNull LayoutInflater inflater, @Nullable ViewGroup root,
      boolean attachToRoot, @Nullable Object component) {
    return ViewDataBinding.<ItemPriceBinding>inflateInternal(inflater, R.layout.item_price, root, attachToRoot, component);
  }

  @NonNull
  public static ItemPriceBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.item_price, null, false, component)
   */
  @NonNull
  @Deprecated
  public static ItemPriceBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable Object component) {
    return ViewDataBinding.<ItemPriceBinding>inflateInternal(inflater, R.layout.item_price, null, false, component);
  }

  public static ItemPriceBinding bind(@NonNull View view) {
    return bind(view, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.bind(view, component)
   */
  @Deprecated
  public static ItemPriceBinding bind(@NonNull View view, @Nullable Object component) {
    return (ItemPriceBinding)bind(component, view, R.layout.item_price);
  }
}
